version: "2.3"

services:

  npm-install:
    image: ${DOCKER_IMAGE:-approov/astropiks:npm-install}
    build:
      context: ./
      args:
        NODE_TAG: "${NODE_TAG:-16-slim}"
        RELEASE_ENV: "npm-install"
    command: "npm install"
    networks:
      - traefik
    volumes:
      - ./src/proxy/nodejs:/home/node/workspace

  local:
    image: ${DOCKER_IMAGE:-approov/astropiks:local}
    build:
      context: ./
      args:
        NODE_TAG: "${NODE_TAG:-16-slim}"
        RELEASE_ENV: "local"
    networks:
      - default
    ports:
      - ${HOST_IP:-127.0.0.1}:${HTTP_PORT:-8080}:${HTTP_PORT:-8080}
    volumes:
      - ./src/proxy/nodejs:/home/node/workspace
      - ./.env:/home/node/workspace/.env
    command:
      - npm
      - start

  # useful to run a development server online
  dev:
    image: ${DOCKER_IMAGE:-approov/astropiks:dev}
    build:
      context: ./
      args:
        NODE_TAG: "${NODE_TAG:-16-slim}"
        RELEASE_ENV: "dev"
    command:
      - npm
      - start
    networks:
      - traefik
    volumes:
      - ./src/proxy/nodejs:/home/node/workspace
      - ./.env:/home/node/workspace/.env
    labels:
      - "traefik.enable=true"
      - "traefik.backend=astropiks-dev${RELEASE_TAG:-}"
      - "traefik.docker.network=traefik"
      - "traefik.port=${HTTP_PORT:-8080}"
      - "traefik.frontend.rule=Host:${PUBLIC_DOMAINS:-dev.astropiks.demo.approov.io}"

  # useful to test in localhost the staging, rc and prod releases
  test:
    image: ${DOCKER_IMAGE:-approov/astropiks:test}
    build:
      context: ./
      dockerfile: prod.Dockerfile
      args:
        RELEASE_ENV: "test"
        BUILD_RELEASE_FROM: "${BUILD_RELEASE_FROM:-master}"
    ports:
      - ${HOST_IP:-127.0.0.1}:${HTTP_PORT:-80}:${HTTP_PORT:-80}
    networks:
      - default
    volumes:
      - ./.env:/home/node/app/.env

  staging:
    image: ${DOCKER_IMAGE:-approov/astropiks:staging}
    build:
      context: ./
      dockerfile: prod.Dockerfile
      args:
        RELEASE_ENV: "staging"
        BUILD_RELEASE_FROM: "${BUILD_RELEASE_FROM:-master}"
    restart: unless-stopped
    networks:
      - traefik
    volumes:
      - ./.env:/home/node/app/.env
    labels:
      - "traefik.enable=true"
      - "traefik.backend=astropiks-staging${RELEASE_TAG:-}"
      - "traefik.docker.network=traefik"
      - "traefik.port=${HTTP_PORT:-8080}"
      - "traefik.frontend.rule=Host:${PUBLIC_DOMAINS:-staging.astropiks.demo.approov.io}"

  rc:
    image: ${DOCKER_IMAGE:-approov/astropiks:rc}
    build:
      context: ./
      dockerfile: prod.Dockerfile
      args:
        RELEASE_ENV: "rc"
        BUILD_RELEASE_FROM: "${BUILD_RELEASE_FROM:-master}"
    restart: unless-stopped
    networks:
      - traefik
    volumes:
      - ./.env:/home/node/app/.env
    labels:
      - "traefik.enable=true"
      - "traefik.backend=astropiks-rc${RELEASE_TAG:-}"
      - "traefik.docker.network=traefik"
      - "traefik.port=${HTTP_PORT:-8080}"
      - "traefik.frontend.rule=Host:${PUBLIC_DOMAINS:-rc.astropiks.demo.approov.io}"

  prod:
    image: ${DOCKER_IMAGE:-approov/astropiks}
    build:
      context: ./
      dockerfile: prod.Dockerfile
      args:
        RELEASE_ENV: "prod"
        BUILD_RELEASE_FROM: "${BUILD_RELEASE_FROM:-master}"
    restart: unless-stopped
    networks:
      - traefik
    volumes:
      - ./.env:/home/node/app/.env
    labels:
      - "traefik.enable=true"
      - "traefik.backend=astropiks-prod"
      - "traefik.docker.network=traefik"
      - "traefik.port=${HTTP_PORT:-8080}"
      - "traefik.frontend.rule=Host:${PUBLIC_DOMAINS:-astropiks.demo.approov.io}"

networks:
  traefik:
    external: true
